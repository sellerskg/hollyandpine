$ ->
  `var i`

  ### Bar Chart starts ###

  d1 = []

  plotWithOptions = ->
    $.plot $('#bar-chart'), [
      d1
      d2
    ],
      series:
        stack: stack
        lines:
          show: lines
          fill: true
          steps: steps
        bars:
          show: bars
          barWidth: 0.8
      grid:
        borderWidth: 0
        hoverable: true
        color: '#777'
      colors: [
        '#ff6c24'
        '#ff2424'
      ]
      bars:
        show: true
        lineWidth: 0
        fill: true
        fillColor: colors: [
          { opacity: 0.9 }
          { opacity: 0.8 }
        ]
    return

  i = 0
  while i <= 20
    d1.push [
      i
      parseInt(Math.random() * 30)
    ]
    i += 1
  d2 = []
  i = 0
  while i <= 20
    d2.push [
      i
      parseInt(Math.random() * 30)
    ]
    i += 1
  stack = 0
  bars = true
  lines = false
  steps = false
  plotWithOptions()
  $('.stackControls input').click (e) ->
    e.preventDefault()
    stack = if $(this).val() == 'With stacking' then true else null
    plotWithOptions()
    return
  $('.graphControls input').click (e) ->
    e.preventDefault()
    bars = $(this).val().indexOf('Bars') != -1
    lines = $(this).val().indexOf('Lines') != -1
    steps = $(this).val().indexOf('steps') != -1
    plotWithOptions()
    return

  ### Bar chart ends ###

  return

### Curve chart starts ###

$ ->
  sin = []
  cos = []

  showTooltip = (x, y, contents) ->
    $('<div id="tooltip">' + contents + '</div>').css(
      position: 'absolute'
      display: 'none'
      top: y + 5
      left: x + 5
      border: '1px solid #000'
      padding: '2px 8px'
      color: '#ccc'
      'background-color': '#000'
      opacity: 0.9).appendTo('body').fadeIn 200
    return

  i = 0
  while i < 14
    sin.push [
      i
      Math.sin(i)
    ]
    cos.push [
      i
      Math.cos(i)
    ]
    i += 0.5
  plot = $.plot($('#curve-chart'), [
    {
      data: sin
      label: 'sin(x)'
    }
    {
      data: cos
      label: 'cos(x)'
    }
  ],
    series:
      lines:
        show: true
        fill: true
      points: show: true
    grid:
      hoverable: true
      clickable: true
      borderWidth: 0
    yaxis:
      min: -1.2
      max: 1.2
    colors: [
      '#1eafed'
      '#1eafed'
    ])
  previousPoint = null
  $('#curve-chart').bind 'plothover', (event, pos, item) ->
    $('#x').text pos.x.toFixed(2)
    $('#y').text pos.y.toFixed(2)
    if $('#enableTooltip:checked').length > 0
      if item
        if previousPoint != item.dataIndex
          previousPoint = item.dataIndex
          $('#tooltip').remove()
          x = item.datapoint[0].toFixed(2)
          y = item.datapoint[1].toFixed(2)
          showTooltip item.pageX, item.pageY, item.series.label + ' of ' + x + ' = ' + y
      else
        $('#tooltip').remove()
        previousPoint = null
    return
  $('#curve-chart').bind 'plotclick', (event, pos, item) ->
    if item
      $('#clickdata').text 'You clicked point ' + item.dataIndex + ' in ' + item.series.label + '.'
      plot.highlight item.series, item.datapoint
    return
  return

# ---
# generated by js2coffee 2.2.0
